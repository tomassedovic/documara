* Features & Issues
** ugly login page
** no message on invalid email/password while trying to log in
** search box should have focus when the document-index page loads
** ugly "new document" button the document-index page
** ugly user-info area on the document-index page
*** the "Logout" button should look like a link
** missing user-info area on the document-index page
** speed up the document-index loading time
   If the client supports localStorage, we can use it to store the list of
   documents and just load the new stuff.

   The client already keeps track of the timestamp of the last modification of
   any document (the first one in the list). We can add a `since=timestamp`
   query parameter to the /api/documents/ call and return just docs modified
   after that.

   Redis' command `ZRANGEBYSCORE` allows us to do that for the sorted sets.
** it should be able to add a new document using the "Search docs" textbox
    when the user types something to the box, we'll insert a "Create new
    document" entry into the documents index and highlight it.

    Pressing enter would create a new doc with the entered text as the title.

    Pressing down arrow key would allow the user to navigate and select existing
    documents.
** Dead mouse hover space between document items in the index page
   When the user moves mouse in-between two document items, none is highlighted.

   To satisfy mister Fitts, we should dedicate the space to the menu items as
   well even if we keep the visuals as they are. There's no reason to deselect
   the items as long as we're within the <ul> element.
** Search box misaligned with the Documents box on the index page
** the user-info area should show the user's name/email
** DBI should use the ShareJS API rather than reading the database directly
   This is of course for the ShareJS data. Their database implementation can
   change at any time. Additionally, the document snapshots in the DB get
   outdated but the API calls provide fresh data.
** The sorting of documents should be updated immediately on first change
   Right now when we open a document, make a quick change and close it, it won't
   show up on top of the documents listing immediately.

   The reason for this that we call for the reindex before the newest operation
   was stored in the database. It may get solved for free by not reading the
   ShareJS DB directly.

   If not, we should either set the timestamp manually on the first received
   operation (and only subsequently read the actual snapshot data to get the
   precise timestamp) or hook the reindexing to a "document updated" rather than
   "op received" event.
** Allow document deletion
** Change the colour theme
   The background and foreground colours were taken from notepad.cc because it
   was quick and I wanted something that looks good for my prototyping and
   testing.

   This must be replaced with a colour theme that I have undisputable right to
   use and distribute.
** Add Offline mode
